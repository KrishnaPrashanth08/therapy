openapi: 3.0.0
info:
  title: Therapy Management API
  description: API for managing clients, therapists, sessions, journals, and communication.
  version: 1.0.0

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PRASHANTHSURA08/therapy23/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PRASHANTHSURA08/therapy_after_review/1.0.0
  - url: https://your-api-domain.com
    description: Production Server
  - url: http://localhost:5000
    description: Development Server

paths:
  /clients:
    post:
      summary: Create a client profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_body'
        required: true
      responses:
        "201":
          description: Client profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    get:
      summary: List all clients
      responses:
        "200":
          description: A list of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client'

  /clients/{clientId}:
    get:
      summary: Retrieve a client's profile
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    put:
      summary: Update a client's profile
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_body'
      responses:
        "200":
          description: Client profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    delete:
      summary: Delete a client's profile
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Client profile deleted
          
  /clients/{clientId}/search:
    get:
      summary: Search across therapists' notes, journals, locations, and expertise
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search term for notes, journals, therapist location, and expertise
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
                  journals:
                    type: array
                    items:
                      $ref: '#/components/schemas/journal_entry'
                  therapists:
                    type: array
                    items:
                      $ref: '#/components/schemas/therapist'

  /journal/therapists/{therapistId}/request-access:
    post:
      summary: Request journal access from clients
      description: Therapist can request access to a client’s journal.
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist requesting access.
            
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: The ID of the client whose journal access is being requested
              required:
                - clientId
      responses:
        "200":
          description: Access request sent successfully
        "400":
          description: Invalid request data (e.g., missing clientId)
        "500":
          description: Internal server error

  /journal/clients/{clientId}/access-requests:
    get:
      summary: List pending journal access requests
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of pending requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/journal_access_request'

  /journal/clients/{clientId}/entries:
    get:
      summary: Retrieve all journal entries for the authenticated client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of journal entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/journal_entry'
    post:
      summary: Add a new journal entry
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_entry_body'
      responses:
        "201":
          description: Journal entry created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
                



  /journal/clients/{clientId}/journal-access-permissions:
    put:
      summary: Manage journal access permissions for a client
      description: |
        Update the permissions for therapists who have access to the client’s journal.
        This endpoint allows administrators or authorized personnel to manage
        which therapists can view a specific client's journal entries.  It ensures
        that only authorized therapists have access to sensitive client data.
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client whose journal access permissions are being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_access_permissions_body'
          
      responses:
        "200":
          description: Journal access permissions updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid request data
        "500":
          description: Internal server error

  /journal/clients/{clientId}/approve:
    post:
      summary: Approve or reject journal access requests
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                therapistId:
                  type: string
                status:
                  type: string
                  enum: [approved, rejected]
              required:
                - therapistId
                - status
      responses:
        "200":
          description: Journal access request handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'

  /journal/clients/{clientId}/therapists:
    get:
      summary: View list of therapists with journal access
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of therapists with access
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/therapist'

  /journal/clients/{clientId}/{journalId}:
    get:
      summary: Retrieve a single journal entry
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: journalId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Journal entry retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
    put:
      summary: Update a journal entry
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: journalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_entry_body'
      responses:
        "200":
          description: Journal entry updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
    delete:
      summary: Delete a journal entry
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: journalId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Journal entry deleted

  /therapists/{therapistId}/session-slots:
    post:
      summary: Create available session slots (Therapist)
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_slot_body'
      responses:
        "201":
          description: Session slot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session_slot'
                
    get:
      summary: List available session slots for a therapist
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of available session slots
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/session_slot'

  /therapists/{therapistId}/session-slots/appointments:
    post:
      summary: Request an appointment for an available session slot
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appointment_request_body'
      responses:
        "201":
          description: Appointment requested successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appointment_request'

    get:
      summary: List pending appointment requests
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of pending appointment requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/appointment_request'

  /therapists/{therapistId}/session-slots/appointments/{appointmentId}:
    put:
      summary: Approve or reject an appointment request
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
      responses:
        "200":
          description: Appointment request updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'

  /session/{therapistId}/{sessionId}:
    get:
      summary: Retrieve a single session
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Session retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    put:
      summary: Update a session
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_body'
      responses:
        "200":
          description: Session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    delete:
      summary: Delete a session
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Session deleted


  /therapists:
    post:
      summary: Create a therapist profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/therapist_body'
        required: true
      responses:
        "201":
          description: Therapist profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    get:
      summary: List all therapists (with search capabilities)
      parameters:
        - name: location
          in: query
          required: false
          schema:
            type: string
        - name: expertise
          in: query
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of therapists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/therapist'

  /therapists/{therapistId}:
    get:
      summary: Retrieve a therapist's profile
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Therapist profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    put:
      summary: Update a therapist's profile
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/therapist_body'
      responses:
        "200":
          description: Therapist profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    delete:
      summary: Delete a therapist's profile
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Therapist profile deleted
          
  /therapists/{therapistId}/search:
    get:
      summary: Search across clients, notes, and journals
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist performing the search.
            
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search term
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      $ref: '#/components/schemas/client'
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
                  journals:
                    type: array
                    items:
                      $ref: '#/components/schemas/journal_entry'
          

          
  # Messages
  /messages:
    post:
      summary: Send a message (client or therapist)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message_body'
        required: true
      responses:
        "200":
          description: Message sent successfully
    get:
      summary: Retrieve message history between a client and therapist
      responses:
        "200":
          description: Message history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
  /messages/{messageId}:
    get:
      summary: Retrieve a single message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being retrieved.
           
          schema:
            type: string
      responses:
        "200":
          description: Message retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
    put:
      summary: Update a message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message_body'
          
      responses:
        "200":
          description: Message updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
    delete:
      summary: Delete a message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being deleted.
            
          schema:
            type: string
      responses:
        "204":
          description: Message deleted

  /therapists/{therapistId}/mapping-requests:
    post:
      summary: Request a client mapping
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
              required:
                - clientId
      responses:
        "200":
          description: Mapping request sent successfully.

  /clients/{clientId}/mapping-requests/{therapistId}:
    put:
      summary: Approve or reject a mapping request from a therapist
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
              required:
                - status
      responses:
        "200":
          description: Mapping request updated successfully.

  /clients/{clientId}/mapped-therapists/{therapistId}:
    delete:
      summary: Remove a therapist mapping from a client
      parameters:
        - name: clientId
          in: path
          required: true
          schema:
            type: string
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Therapist mapping removed successfully.
components:
  schemas:
    signup_body:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum: [client, therapist]

    login_body:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    inline_response_200:
      type: object
      properties:
        message:
          type: string
        userId:
          type: string

    inline_response_200_1:
      type: object
      properties:
        message:
          type: string
        token:
          type: string

    client_body:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
        name:
          type: string

    client:
      type: object
      required:
        - clientId
        - email
        - name
      properties:
        clientId:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        mappedTherapistsIds:
          type: array
          items:
            type: string
          description: IDs of therapists mapped to the client


    therapist_body:
      type: object
      required:
        - email
        - name
        - location
        - expertise
      properties:
        email:
          type: string
          format: email
        name:
          type: string
        location:
          type: string
        expertise:
          type: string

    therapist:
      type: object
      required:
        - therapistId
        - email
        - name
        - location
        - expertise
      properties:
        therapistId:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        location:
          type: string
          description: Therapist's location (e.g., city, state)
        expertise:
          type: string
          description: Therapist's area of expertise
        mappedClients:
          type: array
          items:
            type: string
          description: IDs of clients mapped to the therapist


    journal_access_permissions_body:
      type: object
      properties:
        therapists:
          type: array
          items:
            type: string
          description: List of therapist IDs with journal access permissions for the client
      required:
        - therapists

    session_body:
      type: object
      required:
        - date
        - startTime
        - endTime
        - therapistId
        - clientId
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
          description: The time the session begins
        endTime:
          type: string
          format: time
          description: The time the session ends
        therapistId:
          type: string
        clientId:
          type: string
        privateNotes:
          type: string
          description: Therapist's private notes about the session
        sharedNotes:
          type: string
          description: Notes shared with the client

    session:
      type: object
      required:
        - sessionId
        - date
        - startTime
        - endTime
        - therapistId
        - clientId
      properties:
        sessionId:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
          description: The time the session begins
        endTime:
          type: string
          format: time
          description: The time the session ends
        therapistId:
          type: string
        clientId:
          type: string
        privateNotes:
          type: string
        sharedNotes:
          type: string
          
    session_slot_body:
      type: object
      required:
        - date
        - startTime
        - endTime
        - therapistId
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
          description: The time the session slot begins
        endTime:
          type: string
          format: time
          description: The time the session slot ends
        therapistId:
          type: string
        status:
          type: string
          enum: [available, booked]
          default: available

          
    session_slot:
      type: object
      required:
        - slotId
        - date
        - startTime
        - endTime
        - therapistId
      properties:
        slotId:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
        endTime:
          type: string
          format: time
        therapistId:
          type: string
        status:
          type: string
          enum: [available, booked]

    journal_entry_body:
      type: object
      required:
        - time
        - feeling
        - intensity
        - clientId
      properties:
        time:
          type: string
          format: time
          description: Time when the emotion was felt
        feeling:
          type: string
          description: The specific emotion felt
        intensity:
          type: integer
          minimum: 1
          maximum: 10
          description: The intensity of the emotion on a scale of 1-10
        clientId:
          type: string

    journal_entry:
      type: object
      required:
        - journalEntryId
        - time
        - feeling
        - intensity
        - clientId
      properties:
        journalEntryId:
          type: string
        time:
          type: string
          format: time
        feeling:
          type: string
        intensity:
          type: integer
        clientId:
          type: string

    message_body:
      type: object
      required:
        - senderId
        - recipientId
        - content
      properties:
        senderId:
          type: string
        recipientId:
          type: string
        content:
          type: string

    message:
      type: object
      required:
        - messageId
        - senderId
        - recipientId
        - content
      properties:
        messageId:
          type: string
        senderId:
          type: string
        recipientId:
          type: string
        content:
          type: string

    appointment_request_body:
      type: object
      required:
        - slotId
        - clientId
      properties:
        slotId:
          type: string
          description: ID of the slot being requested
        clientId:
          type: string
          description: ID of the client requesting the appointment

    appointment_request:
      type: object
      properties:
        appointmentRequestId:
          type: string
        slotId:
          type: string
        clientId:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected]

    journal_access_request:
      type: object
      properties:
        journalAccessRequestId:
          type: string
        therapistId:
          type: string
        clientId:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected]

    note:
      type: object
      properties:
        noteId:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
