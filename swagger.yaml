openapi: 3.0.0
info:
  title: Therapy Management API
  description: API for managing clients, therapists, sessions, journals, and communication.
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/PRASHANTHSURA08/therapy_after_review/1.0.0
  - url: https://your-api-domain.com
    description: Production Server
  - url: http://localhost:5000
    description: Development Server
paths:
  # Authentication Endpoints 
  /signup:
    post:
      summary: User Signup
      description: Endpoint for user signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signup_body'
        required: true
      responses:
        "200":
          description: Signup successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid input
  /login:
    post:
      summary: User Login
      description: Endpoint for user login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_body'
        required: true
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "401":
          description: Unauthorized
        "400":
          description: Invalid input
  # Clients
  /clients:
    post:
      summary: Create a client profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_body'
        required: true
      responses:
        "201":
          description: Client profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    get:
      summary: List all clients
      responses:
        "200":
          description: A list of clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client'
  /clients/{clientId}:
    get:
      summary: Retrieve a client’s profile
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client to retrieve.
           
          schema:
            type: string
      responses:
        "200":
          description: Client profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    put:
      summary: Update a client’s profile
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client to update.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/client_body'

      responses:
        "200":
          description: Client profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client'
    delete:
      summary: Delete a client’s profile
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client to delete.
            
          schema:
            type: string
      responses:
        "204":
          description: Client profile deleted
  /clients/{clientId}/journal-access-requests:
    get:
      summary: List pending journal access requests
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client whose journal access requests are being retrieved.
            
          schema:
            type: string
      responses:
        "200":
          description: List of pending requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/journal_access_request'
  /clients/{clientId}/approve-access:
    post:
      summary: Approve or reject journal access requests
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client approving/rejecting the journal access request.
            
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                therapistId:
                  type: string
                  description: The therapist that we need to either approve or reject.
                status:
                  type: string
                  enum: [approved, rejected]
                  description: The status if the therapist is approved or rejected.
              required:
                - therapistId
                - status
      responses:
        "200":
          description: Journal access request handled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /clients/{clientId}/therapists-access:
    get:
      summary: View list of therapists with journal access
      description: Retrieve a list of therapists who have access to a client’s journal.
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client whose journal access is being queried.
            
          schema:
            type: string
      responses:
        "200":
          description: List of therapists with access
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/therapist'
        "400":
          description: Invalid client ID
        "500":
          description: Internal server error
  /clients/{clientId}/journal-access-permissions:
    put:
      summary: Manage journal access permissions for a client
      description: |
        Update the permissions for therapists who have access to the client’s journal.
        This endpoint allows administrators or authorized personnel to manage
        which therapists can view a specific client's journal entries.  It ensures
        that only authorized therapists have access to sensitive client data.
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client whose journal access permissions are being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_access_permissions_body'
          
      responses:
        "200":
          description: Journal access permissions updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid request data
        "500":
          description: Internal server error
  /clients/{clientId}/appointments:
    post:
      summary: Request appointments for available sessions
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client requesting the appointment.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appointment_request_body'
          
      responses:
        "201":
          description: Appointment requested successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
  /clients/{clientId}/search:
    get:
      summary: Search across therapists’ notes and journals
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client performing the search.
            
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search term
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
                  journals:
                    type: array
                    items:
                      $ref: '#/components/schemas/journal_entry'
  # Therapists
  /therapists:
    post:
      summary: Create a therapist profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/therapist_body'
        required: true
      responses:
        "201":
          description: Therapist profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    get:
      summary: List all therapists (with search capabilities)
      description: |
        Retrieve a list of therapists.  Supports filtering by location and expertise.
      parameters:
        - name: location
          in: query
          required: false
          schema:
            type: string
          description: Filter therapists by location (e.g., city, state).
        - name: expertise
          in: query
          required: false
          schema:
            type: string
          description: Filter therapists by area of expertise (e.g., anxiety, depression).
      responses:
        "200":
          description: A list of therapists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/therapist'
  /therapists/{therapistId}:
    get:
      summary: Retrieve a therapist’s profile
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist being retrieved.
           
          schema:
            type: string
      responses:
        "200":
          description: Therapist profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    put:
      summary: Update a therapist’s profile
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/therapist_body'
          
      responses:
        "200":
          description: Therapist profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/therapist'
    delete:
      summary: Delete a therapist’s profile
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist being deleted.
            
          schema:
            type: string
      responses:
        "204":
          description: Therapist profile deleted
  /therapists/{therapistId}/request-access:
    post:
      summary: Request journal access from clients
      description: Therapist can request access to a client’s journal.
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist requesting access.
            
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: The ID of the client whose journal access is being requested
              required:
                - clientId
      responses:
        "200":
          description: Access request sent successfully
        "400":
          description: Invalid request data (e.g., missing clientId)
        "500":
          description: Internal server error
  /therapists/{therapistId}/appointments:
    get:
      summary: List pending appointment requests
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist whose appointment requests are being listed.
            
          schema:
            type: string
      responses:
        "200":
          description: List of pending appointment requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/appointment_request'
  /therapists/{therapistId}/appointments/{appointmentId}:
    patch:
      summary: Approve or reject an appointment request
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist handling the appointment request.
            
          schema:
            type: string
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
                  
      responses:
        "200":
          description: Appointment request updated
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/appointment_request'
  /therapists/{therapistId}/sessions:
    post:
      summary: Create available session slots (Therapist)
      description: |
        Create available session slots for a specific therapist. This endpoint
        is used by therapists to define their availability for client sessions.
        It is typically used for therapists to indicate their open slots, not to
        directly book a session for a specific client.
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist for whom the session slot is being created.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_body'
          
      responses:
        "201":
          description: Session slot created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
  /therapists/{therapistId}/search:
    get:
      summary: Search across clients, notes, and journals
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist performing the search.
            
          schema:
            type: string
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search term
      responses:
        "200":
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  clients:
                    type: array
                    items:
                      $ref: '#/components/schemas/client'
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/note'
                  journals:
                    type: array
                    items:
                      $ref: '#/components/schemas/journal_entry'
  # Sessions
  /sessions:
    post:
      summary: Create a new session (Administrative)
      description: |
        Create a new session, typically used by administrators or customer support
        to book a session on behalf of a client. This bypasses the therapist's
        availability check and allows for direct session creation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_body'
        required: true
      responses:
        "201":
          description: Session created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    get:
      summary: List all sessions
      responses:
        "200":
          description: List of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/session'
  /sessions/{sessionId}:
    get:
      summary: Retrieve a single session
      parameters:
        - name: sessionId
          in: path
          required: true
          description: |
            The ID of the session being retrieved.
            
          schema:
            type: string
      responses:
        "200":
          description: Session retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    put:
      summary: Update a session
      parameters:
        - name: sessionId
          in: path
          required: true
          description: |
            The ID of the session being updated.
           
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/session_body'
          
      responses:
        "200":
          description: Session updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/session'
    delete:
      summary: Delete a session
      parameters:
        - name: sessionId
          in: path
          required: true
          description: |
            The ID of the session being deleted.
           
          schema:
            type: string
      responses:
        "204":
          description: Session deleted
  # Journals
  /journals:
    post:
      summary: Add a new journal entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_entry_body'
          
      responses:
        "201":
          description: Journal entry created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
    get:
      summary: Retrieve all journal entries for the authenticated client
      responses:
        "200":
          description: List of journal entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/journal_entry'
  /journals/{journalId}:
    get:
      summary: Retrieve a single journal entry
      parameters:
        - name: journalId
          in: path
          required: true
          description: |
            The ID of the journal entry being retrieved.
            
          schema:
            type: string
      responses:
        "200":
          description: Journal entry retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
    put:
      summary: Update a journal entry
      parameters:
        - name: journalId
          in: path
          required: true
          description: |
            The ID of the journal entry being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/journal_entry_body'
          
      responses:
        "200":
          description: Journal entry updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/journal_entry'
    delete:
      summary: Delete a journal entry
      parameters:
        - name: journalId
          in: path
          required: true
          description: |
            The ID of the journal entry being deleted.
            
          schema:
            type: string
      responses:
        "204":
          description: Journal entry deleted
  # Messages
  /messages:
    post:
      summary: Send a message (client or therapist)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message_body'
        required: true
      responses:
        "200":
          description: Message sent successfully
    get:
      summary: Retrieve message history between a client and therapist
      responses:
        "200":
          description: Message history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/message'
  /messages/{messageId}:
    get:
      summary: Retrieve a single message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being retrieved.
           
          schema:
            type: string
      responses:
        "200":
          description: Message retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
    put:
      summary: Update a message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being updated.
            
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message_body'
          
      responses:
        "200":
          description: Message updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message'
    delete:
      summary: Delete a message
      parameters:
        - name: messageId
          in: path
          required: true
          description: |
            The ID of the message being deleted.
            
          schema:
            type: string
      responses:
        "204":
          description: Message deleted
          
  # Mapping Endpoints
  /therapists/{therapistId}/mapping-requests:
    post:
      summary: Request a client mapping
      description: A therapist requests to be mapped to a client for therapy.
      parameters:
        - name: therapistId
          in: path
          required: true
          description: |
            The ID of the therapist requesting the mapping.
            
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                  description: The ID of the client being requested for mapping.
              required:
                - clientId
      responses:
        "200":
          description: Mapping request sent successfully.
        "400":
          description: Invalid request data (e.g., missing clientId).
        "404":
          description: Client or therapist not found.

  /clients/{clientId}/mapping-requests/{therapistId}:
    patch:
      summary: Approve or reject a mapping request from a therapist
      description: A client approves or rejects a therapist's request to be mapped for therapy.
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client responding to the mapping request.
            
          schema:
            type: string
        - name: therapistId
          in: path
          required: true
          description: The ID of the therapist who made the mapping request.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [approved, rejected]
                  description: The status of the mapping request.
              required:
                - status
      responses:
        "200":
          description: Mapping request updated successfully.
        "400":
          description: Invalid request data (e.g., invalid status).
        "404":
          description: Client or therapist not found.

  /clients/{clientId}/mapped-therapists/{therapistId}:
    delete:
      summary: Remove a therapist mapping from a client
      description: A client removes a therapist from their list of mapped therapists.
      parameters:
        - name: clientId
          in: path
          required: true
          description: |
            The ID of the client removing the therapist mapping.
            
          schema:
            type: string
        - name: therapistId
          in: path
          required: true
          description: The ID of the therapist being removed from the client's mapping list.
          schema:
            type: string
      responses:
        "204":
          description: Therapist mapping removed successfully.
        "404":
          description: Client or therapist not found.


components:
  schemas:
    # Authentication Schemas 
    signup_body:
      type: object
      required:
        - email
        - password
        - role
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        role:
          type: string
          enum: [client, therapist]
    login_body:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    inline_response_200:
      type: object
      properties:
        message:
          type: string
        userId:
          type: string
    inline_response_200_1:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
    # Client Schemas
    client_body:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
        name:
          type: string
    client:
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        mappedTherapists:
          type: array
          items:
            type: string
          description: IDs mapped to the client.
    # Therapist Schemas
    therapist_body:
      type: object
      required:
        - email
        - name
      properties:
        email:
          type: string
          format: email
        name:
          type: string
    therapist:
      type: object
      required:
        - id
        - email
        - name
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        location:  # Add location
          type: string
          description: Therapist's location (e.g., city, state).
        expertise: # Add expertise
          type: string
          description: Therapist's area of expertise.
        mappedClients:
          type: array
          items:
            type: string
          description: IDs of clients mapped to the therapist.
    journal_access_permissions_body:
      type: object
      properties:
        therapists:
          type: array
          items:
            type: string
          description: List of therapist IDs with journal access permissions for the client.
      required:
        - therapists
    # Session Schemas
    session_body:
      type: object
      required:
        - date
        - startTime
        - endTime
        - therapistId
        - clientId
      properties:
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
          description: The time the session begins
        endTime:
          type: string
          format: time
          description: The time the session ends
        therapistId:
          type: string
        clientId:
          type: string
        privateNotes:
          type: string
          description: Therapist's private notes about the session
        sharedNotes:
          type: string
          description: Notes shared with the client
    session:
      type: object
      required:
        - id
        - date
        - startTime
        - endTime
        - therapistId
        - clientId
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        startTime:
          type: string
          format: time
          description: The time the session begins
        endTime:
          type: string
          format: time
          description: The time the session ends
        therapistId:
          type: string
        clientId:
          type: string
        privateNotes:
          type: string
        sharedNotes:
          type: string
    # Journal Schemas
    journal_entry_body:
      type: object
      required:
        - time
        - feeling
        - intensity
        - clientId
      properties:
        time:
          type: string
          format: time
          description: Time when the emotion was felt.
        feeling:
          type: string
          description: |
            The specific emotion felt.  Must be chosen from the list of acceptable
            emotions. Some examples include:
              * Good: Happy, Joyful, Peaceful
              * Bad: Sad, Angry, Anxious
              * Basic:  Love, Surprise, Fear
        intensity:
          type: integer
          description: |
            The intensity of the emotion on a scale of 1-10, where 1 is very mild
            and 10 is extremely intense.
        clientId:
          type: string
    journal_entry:
      type: object
      required:
        - id
        - time
        - feeling
        - intensity
        - clientId
      properties:
        id:
          type: string
        time:
          type: string
          format: time
          description: Time when the emotion was felt
        feeling:
          type: string
          description: |
            The specific emotion felt.  Must be chosen from the list of acceptable
            emotions. Some examples:
              * Good: Happy, Joyful, Peaceful
              * Bad: Sad, Angry, Anxious
              * Basic:  Love, Surprise, Fear
        intensity:
          type: integer
          description: |
            The intensity of the emotion on a scale of 1-10.
        clientId:
          type: string

    # Message Schemas
    message_body:
      type: object
      required:
        - senderId
        - recipientId
        - content
      properties:
        senderId:
          type: string
        recipientId:
          type: string
        content:
          type: string
    message:
      type: object
      required:
        - id
        - senderId
        - recipientId
        - content
      properties:
        id:
          type: string
        senderId:
          type: string
        recipientId:
          type: string
        content:
          type: string
    # Appointment Schemas
    appointment_request_body:
      type: object
      required:
        - sessionId
        - clientId
      properties:
        sessionId:
          type: string
          description: ID of the session being requested
        clientId:
          type: string
          description: ID of the client requesting the appointment
    appointment_request:
      type: object
      properties:
        id:
          type: string
        sessionId:
          type: string
        clientId:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected]
    # Journal Access Request Schemas
    journal_access_request:
      type: object
      properties:
        id:
          type: string
        therapistId:
          type: string
        clientId:
          type: string
        status:
          type: string
          enum: [pending, approved, rejected]
    # Note Schemas
    note:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
